@startuml

/' diagram meta data start
config=CallConfiguration;
{
  "rootMethod": "cherryrockstudios.listo.MainController#loadListoWithoutWarning()",
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 3,
    "backwardDepth": 3,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showMethodParametersTypes": false,
    "showMethodParametersNames": false,
    "showMethodReturnType": false,
    "showPackageLevels": 2,
    "showCallOrder": false,
    "edgeMode": "MethodsOnly", // TypesOnly, MethodsOnly, TypesAndMethods, MethodsAndDirectTypeUsage
    "showDetailedClassStructure": false
  },
  "rootClass": "cherryrockstudios.listo.MainController",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="LR"
    splines=polyline
    

'nodes 
subgraph cluster_102982545 { 
   	label=listo
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1102070209 { 
   	label=unit
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   subgraph cluster_190160133 { 
   	label=Project
	labeljust=l
	fillcolor=white
	style=filled
   
   Project971874320XXXupdateCount104431[
	label="+ updateCount()"
	style=filled
	fillcolor=white
	tooltip="Project

&#10;  Updates the count variable. (Only used when loading a Listo)&#10; &#10;  @param newCount: the new count value extracted form a loaded Listo.&#10; "
	fontcolor=darkgreen
];
} 

subgraph cluster_884601869 { 
   	label=Listo
	labeljust=l
	fillcolor=white
	style=filled
   
   Listo971874320XXXaddCourse1808118735[
	label="+ addCourse()"
	style=filled
	fillcolor=white
	tooltip="Listo

&#10;  Adds a course to the Listo's course list&#10; &#10;  @param course: the name of the course&#10; "
	fontcolor=darkgreen
];

Listo971874320XXXaddProject1355342585[
	label="+ addProject()"
	style=filled
	fillcolor=white
	tooltip="Listo

&#10;  Add a project to the Listo's project list.&#10; &#10;  @param project: a project to be added to the project list.&#10; "
	fontcolor=darkgreen
];

Listo971874320XXXgetProjectByID104431[
	label="+ getProjectByID()"
	style=filled
	fillcolor=white
	tooltip="Listo

&#10;  Loops through the project list to get a project by its project ID.&#10;  Returns null if project can't be found&#10; &#10;  @param projectID: the ID of the project we want to access&#10;  @return the Project to be acessed by its ID, nul if no project found&#10; "
	fontcolor=darkgreen
];
} 
} 

subgraph cluster_1102075967 { 
   	label=util
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   subgraph cluster_572980323 { 
   	label=Reader
	labeljust=l
	fillcolor=white
	style=filled
   
   Reader971868562XXXloadFile2189724[
	label="+ loadFile()"
	style=filled
	fillcolor=white
	tooltip="Reader

&#10;  Loads a listo file from an input file provided on command line arguments&#10; &#10;  @param inputFile: file to load data from&#10;  @return a Listo instance extracted from the file.&#10; "
	fontcolor=darkgreen
];
} 
} 

subgraph cluster_74739137 { 
   	label=MainController
	labeljust=l
	fillcolor=white
	style=filled
   
   MainController477830142XXXLOAD_FILE0[
	label="+ LOAD_FILE()"
	style=filled
	fillcolor=white
	tooltip="MainController

&#10;  The state of the program when there is a file loaded.&#10; "
	fontcolor=darkgreen
];

MainController477830142XXXNEW_FILE0[
	label="+ NEW_FILE()"
	style=filled
	fillcolor=white
	tooltip="MainController

&#10;  The state of the program when there is a new file loaded.&#10; "
	fontcolor=darkgreen
];

MainController477830142XXXloadListoWithWarning0[
	label="+ loadListoWithWarning()"
	style=filled
	fillcolor=white
	tooltip="MainController

 HELPER METHOD&#10;  Loads a file and updates the interface after warning the user.&#10; "
	fontcolor=darkgreen
];

MainController477830142XXXloadListoWithoutWarning0[
	label="+ loadListoWithoutWarning()"
	style=filled
	fillcolor=white
	tooltip="MainController

 HELPER METHOD&#10;  Loads a file right away and updates the interface without warning the user.&#10; "
	penwidth=4
	fontcolor=darkgreen
];

MainController477830142XXXreadFile2189724[
	label="+ readFile()"
	style=filled
	fillcolor=white
	tooltip="MainController

 HELPER METHOD&#10;  Loads a Listo given provided file, throws an alert if file can't be loaded&#10; &#10;  @param fileToLoad: a file to be loaded&#10;  @return true if loaded file successfully, else false.&#10; "
	fontcolor=darkgreen
];

MainController477830142XXXupdateStatusBasedToday0[
	label="+ updateStatusBasedToday()"
	style=filled
	fillcolor=white
	tooltip="MainController

 HELPER METHOD&#10;  Uses equals() and compareTo() override methods, to update past dues as Late Statuses&#10; "
	fontcolor=darkgreen
];
} 
} 

'edges    
MainController477830142XXXLOAD_FILE0 -> MainController477830142XXXupdateStatusBasedToday0;
MainController477830142XXXNEW_FILE0 -> MainController477830142XXXupdateStatusBasedToday0;
MainController477830142XXXloadListoWithWarning0 -> MainController477830142XXXloadListoWithoutWarning0;
MainController477830142XXXloadListoWithoutWarning0 -> MainController477830142XXXLOAD_FILE0;
MainController477830142XXXloadListoWithoutWarning0 -> MainController477830142XXXNEW_FILE0;
MainController477830142XXXloadListoWithoutWarning0 -> MainController477830142XXXreadFile2189724;
MainController477830142XXXreadFile2189724 -> Reader971868562XXXloadFile2189724;
MainController477830142XXXupdateStatusBasedToday0 -> Listo971874320XXXgetProjectByID104431;
MainController477830142XXXupdateStatusBasedToday0 -> Project971874320XXXupdateCount104431;
Reader971868562XXXloadFile2189724 -> Listo971874320XXXaddCourse1808118735;
Reader971868562XXXloadFile2189724 -> Listo971874320XXXaddProject1355342585;
Reader971868562XXXloadFile2189724 -> Project971874320XXXupdateCount104431;
    
}
@enduml